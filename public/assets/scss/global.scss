/* Need to convert this SASS file to CSS format :
* sass public/assets/scss/global.scss:public/assets/css/global.css
 */

// Required
@import "../bootstrap/scss/functions";
@import "../bootstrap/scss/mixins";
@import "../bootstrap/scss/variables";

$component-active-color: $dark;
$component-active-bg: $light;
$input-bg: $light;
$input-color: $dark;

// Themes overriding default variables

// Default : dark theme
$primary: #00ADB5;
$secondary: #393E46;
$info: #A5C9CA;
$body-bg: #222831;
$body-color: #EEEEEE;
$theme-colors: (
        "primary": $primary,
        "secondary": $secondary,
        "success": $success,
        "danger": $danger,
        "warning": $warning,
        "info": $info,
        "dark": $dark,
        "light": $light
);

// Dark theme
.dark {

  $primary: #00ADB5;
  $secondary: #393E46;
  $info: #A5C9CA;

  $theme-colors: (
          "primary": $primary,
          "secondary": $secondary,
          "success": $success,
          "danger": $danger,
          "warning": $warning,
          "info": $info,
          "dark": $dark,
          "light": $light
  );

  /* redefine theme color variables */
  @each $color, $value in $theme-colors {
    --#{$variable-prefix}#{$color}: #{$value};
  }

  $theme-colors-rgb: map-loop($theme-colors, to-rgb, "$value");

  @each $color, $value in $theme-colors-rgb {
    --#{$variable-prefix}#{$color}-rgb: #{$value};
  }

  $body-bg: #222831;
  $body-color: #EEEEEE;

  --#{$variable-prefix}body-color: #{$body-color};
  --#{$variable-prefix}body-bg: #{$body-bg};
}

// Light theme
.light {

  $primary: #71C9CE;
  $secondary: #CBF1F5;

  $theme-colors: (
          "primary": $primary,
          "secondary": $secondary,
          "success": $success,
          "danger": $danger,
          "warning": $warning,
          "info": $info,
          "dark": $dark,
          "light": $light
  );

  /* redefine theme color variables */
  @each $color, $value in $theme-colors {
    --#{$variable-prefix}#{$color}: #{$value};
  }

  $theme-colors-rgb: map-loop($theme-colors, to-rgb, "$value");

  @each $color, $value in $theme-colors-rgb {
    --#{$variable-prefix}#{$color}-rgb: #{$value};
  }

  $body-bg: #E3FDFD;
  $body-color: #222831;

  --#{$variable-prefix}body-color: #{$body-color};
  --#{$variable-prefix}body-bg: #{$body-bg};

  $ct-bg: white;
  .accordion-item-task {
    --#{$variable-prefix}accordion-active-bg: #{$ct-bg};
    --#{$variable-prefix}accordion-btn-focus-box-shadow: #{$ct-bg};
  }

  .btn-task-add {
    --#{$variable-prefix}btn-color: #{$body-color};
    --#{$variable-prefix}btn-active-color: #{$body-color};

    --#{$variable-prefix}btn-bg: #{$ct-bg};
    --#{$variable-prefix}btn-hover-bg: #{$ct-bg};
    --#{$variable-prefix}btn-hover-border-color: #{$ct-bg};
    --#{$variable-prefix}btn-active-bg: #{$ct-bg};
    --#{$variable-prefix}btn-active-border-color: #{$ct-bg};

    --#{$variable-prefix}btn-hover-color: #{$primary};
    --#{$variable-prefix}btn-focus-shadow-rgb: none;
    text-align: left !important;
  }

  .task-drag-ghost {
    background: #{$secondary};
    filter: brightness(85%);
  }

  .task-drag-dragging {
    background: #{$secondary};
    opacity: 1 !important;
  }
}

// Required
@import "../bootstrap/scss/bootstrap";

.accordion-button:focus {
  box-shadow: none;
}

.grabbing * {
  cursor: grabbing !important;
}

.task-view {
  padding-left: 0;
  padding-right: 0;
}

.task-view-details {
  /*flex: 1;
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 0%;
  margin-right: 30px;
  border: solid 1px green;*/
  margin-left: 30px;
  margin-right: 30px;
}

.task-view-info {
  display: flex;
  flex-direction: column;
}

.btn-task-drag {
  cursor: grab;
  position: absolute;
  /*left: -27px;
  top: 7px;
  width: 27px;*/
  display: flex;
  flex-wrap: nowrap;
  opacity: 0;
}

.task-view:hover .btn-task-drag{
  opacity: 1;
}

.task-add {
  padding-top: 0;
}

.task-new {
  display: none;
}
.btn-task-create:disabled {
  cursor: not-allowed;
  pointer-events: all !important;
}